AWSTemplateFormatVersion: "2010-09-09"
Description: "Amazon Macie Activity Generator"

Metadata:
  License:
    Description: 'Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved. SPDX-License-Identifier: MIT-0'

Parameters: 
  BlueprintBucket: 
    Type: String
    Description: "S3 bucket name holding amazon-macie-activity-generator blueprint."
    Default: ""

  BlueprintObject:
    Type: String
    MinLength: "1"
    Description: "S3 object containing amazon-macie-activity-generator blueprint."
    Default: "DefaultBlueprint.json"

  LambdaPkgBucket:
    Type: String
    Description: "S3 bucket name holding amazon-macie-activity-generator Lambda function package."
    Default: ""

  LambdaPkgObject:
    Type: String
    MinLength: "1"
    Description: "S3 object containing amazon-macie-activity-generator Lambda function package."
    Default: "LambdaFunction.zip"

Mappings:
  RegionalBuckets:
    us-east-1:
      default: amazon-macie-activity-generator-us-east-1-fb58a9df3468
    us-west-2:
      default: amazon-macie-activity-generator-us-west-2-03eec07c40eb

Conditions: 
  UseDefaultLambdaPkgBucket: !Equals [ !Ref LambdaPkgBucket, "" ]
  UseDefaultBlueprintBucket: !Equals [ !Ref BlueprintBucket, "" ]

Outputs:
  DefaultS3Bucket:
    Description: Default S3 bucket used by amazon-macie-activity-generator for S3 targets
    Value: !Ref DefaultS3Bucket

Resources:
  LambdaFunction: 
    Type: "AWS::Lambda::Function"
    DependsOn:
      - LambdaRoleV3EPW2DMONAX
      - TimeseriesQueue
      - DefaultS3Bucket
    Properties: 
      Handler: "main.lambda_handler"
      Role: 
        Fn::GetAtt: 
          - "LambdaRoleV3EPW2DMONAX"
          - "Arn"
      Code:
        S3Bucket:
          Fn::If:
          - UseDefaultLambdaPkgBucket
          - !FindInMap [RegionalBuckets, !Ref "AWS::Region", default]
          - !Ref LambdaPkgBucket
        S3Key:
          Ref: LambdaPkgObject
      Runtime: "python2.7"
      Timeout: "300"
      MemorySize: "1536"
      Environment:
        Variables:
          TimeSeriesQueue:
            Ref: TimeseriesQueue
          BlueprintBucket:
            Fn::If:
            - UseDefaultBlueprintBucket
            - !FindInMap [RegionalBuckets, !Ref "AWS::Region", default]
            - !Ref BlueprintBucket
          BlueprintObject:
            Ref: BlueprintObject
          DefaultS3Bucket:
            Ref: DefaultS3Bucket

  LambdaRoleV3EPW2DMONAX:
    Type: AWS::IAM::Role
    DependsOn: LambdaRoleCustomPolicy
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - Ref: LambdaRoleCustomPolicy

  LambdaRoleCustomPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Path: "/"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
            - sts:AssumeRole
            - s3:GetObject
            - s3:ListBucket
            - s3:PutObject
            - cloudwatch:PutMetricData
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - lambda:InvokeFunction
            Resource: "*"
          -
            Effect: "Allow"
            Action:
            - sqs:DeleteMessage
            - sqs:ReceiveMessage
            - sqs:SendMessage
            - sqs:SendMessageBatch
            Resource:
              Fn::GetAtt:
                - "TimeseriesQueue"
                - "Arn"

  ScheduledRule:
    Type: "AWS::Events::Rule"
    Properties:
      Description: "ScheduledRule"
      ScheduleExpression: "rate(1 minute)"
      State: "ENABLED"
      Targets:
        -
          Arn:
            Fn::GetAtt:
              - "LambdaFunction"
              - "Arn"
          Id: "TargetFunctionV1"

  PermissionForEventsToInvokeLambda: 
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName:
        Ref: "LambdaFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "ScheduledRule"
          - "Arn"

  TimeseriesQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      FifoQueue: True
      MessageRetentionPeriod: "1209600"
      VisibilityTimeout: "43200"

  DefaultS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: Private
      LifecycleConfiguration:
        Rules:
        - Id: DefaultS3BucketCleanupRule
          Status: Enabled
          ExpirationInDays: 60
          NoncurrentVersionExpirationInDays: 60
